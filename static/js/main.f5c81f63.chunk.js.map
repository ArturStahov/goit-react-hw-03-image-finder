{"version":3,"sources":["components/HeaderPage.jsx","components/FormSearch.jsx","components/Section.jsx","image/default-image.jpg","components/ImagesListRender.jsx","service/ServiceApi.js","components/Spinner.jsx","components/Notification.jsx","service/ErrorInfo.js","components/Modal.jsx","components/ButtonLoadMore.jsx","components/LoadInfinityControl.jsx","components/ButtonScrollTop.jsx","App.jsx","index.js"],"names":["Header","styled","header","HeaderPage","children","id","Form","form","Input","input","FormSearch","state","inputValue","handleInput","e","setState","target","value","handlerForm","preventDefault","props","onSearch","onSubmit","this","type","onChange","placeholder","Component","SectionContent","section","Section","bounceAnimation","keyframes","tada","List","ul","ListItem","li","Image","img","Overlay","div","StatisticBlock","StatisticItem","span","IcoView","ImageListRender","imagesArr","onGetLargeImg","map","webformatURL","DefaultImage","largeImageURL","tags","likes","views","downloads","onClick","className","icon","faSearch","color","size","faEye","faThumbsUp","faSave","src","alt","ServiceApi","query","page","axios","get","then","response","data","SpinnerBlock","Spinner","height","width","Notification","message","ErrorInfo","info","title","text","delay","animIn","rollIn","animOut","rollOut","Modal","ContentBlock","ButtonClose","button","ModalWindows","isOut","timeOut","handlerEscape","code","fadeoutModal","timeId","setTimeout","onCloseModal","onLoadImage","document","body","style","overflow","window","addEventListener","removeEventListener","clearTimeout","imgUrl","styledClose","styledOpen","faTimesCircle","onLoad","Button","ButtonLoadMore","CheckboxWrap","label","Checkbox","CheckboxTitle","LoadInfinityControl","isInfinityLoad","handleCheckbox","checked","onCheckChange","ButtonScTop","a","ButtonScrollTop","href","faChevronCircleUp","App","images","formSearch","loading","error","largeImgUrl","isFullHits","isInfinityScroll","registrationIntersectionObserver","observerApi","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","console","log","fethApi","rootMargin","threshold","trackingObj","querySelector","observe","hits","length","total","prevState","catch","finally","handlerFormSubmit","openModal","urlImgLarge","closeModal","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","ReactDom","render","StrictMode"],"mappings":"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","file":"static/js/main.f5c81f63.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n  padding: 50px 0px 20px;\n  width: 100%;\n  background-color: grey;\n`;\n\nexport default function HeaderPage({ children }) {\n  return (\n    <Header id=\"page-header\">\n      <nav>{children}</nav>\n    </Header>\n  );\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Form = styled.form`\n  max-width: 350px;\n  margin: 0 auto;\n  margin-bottom: 10px;\n`;\nconst Input = styled.input`\n  width: 100%;\n  height: 30px;\n  border: 2px solid black;\n  border-radius: 0.5rem;\n  padding-left: 10px;\n  font-size: 1rem;\n`;\n\nexport default class FormSearch extends Component {\n  static propTypes = {\n    onSearch: PropTypes.func.isRequired,\n  };\n\n  state = {\n    inputValue: '',\n  };\n\n  handleInput = e => {\n    this.setState({\n      inputValue: e.target.value,\n    });\n  };\n\n  handlerForm = e => {\n    e.preventDefault();\n    const { inputValue } = this.state;\n\n    this.props.onSearch(inputValue);\n    this.setState({\n      inputValue: '',\n    });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.handlerForm}>\n        <Input\n          type=\"text\"\n          value={this.state.inputValue}\n          onChange={this.handleInput}\n          placeholder=\"Search images and photos\"\n        />\n      </Form>\n    );\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst SectionContent = styled.section`\n  padding: 50px 0px 50px;\n  max-width: 1000px;\n  margin: 0 auto;\n`;\n\nexport default function Section({ children }) {\n  return <SectionContent>{children}</SectionContent>;\n}\n","export default __webpack_public_path__ + \"static/media/default-image.2e01288c.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEye,\n  faThumbsUp,\n  faSave,\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\nimport styled, { keyframes } from 'styled-components';\nimport { tada } from 'react-animations';\nimport DefaultImage from '../image/default-image.jpg';\n\nconst bounceAnimation = keyframes`${tada}`;\n\nconst List = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst ListItem = styled.li`\n  position: relative;\n  width: 300px;\n  height: 200px;\n  margin-bottom: 25px;\n\n  &:hover .overlay {\n    visibility: visible;\n    opacity: 1;\n  }\n  &:hover {\n    box-shadow: 10px 5px 5px grey;\n    border: 3px solid green;\n    animation: 2s ${bounceAnimation} ease-in-out;\n  }\n  cursor: zoom-in;\n`;\nconst Image = styled.img`\n  height: 100%;\n  width: 100%;\n`;\nconst Overlay = styled.div`\n  visibility: hidden;\n  opacity: 0;\n  position: absolute;\n  background-color: rgba(0, 0, 0, 0.7);\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  transition-property: opacity;\n  transition-duration: 0.3s;\n`;\nconst StatisticBlock = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  position: absolute;\n  bottom: 5px;\n`;\nconst StatisticItem = styled.span`\n  font-size: 0.8rem;\n  font-weight: 600;\n  color: #fff;\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\nconst IcoView = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport default function ImageListRender({ imagesArr, onGetLargeImg }) {\n  return (\n    <List>\n      {imagesArr.map(\n        ({\n          id,\n          webformatURL = DefaultImage,\n          largeImageURL,\n          tags,\n          likes,\n          views,\n          downloads,\n        }) => (\n          <ListItem key={id} onClick={() => onGetLargeImg(largeImageURL)}>\n            <Overlay className=\"overlay\">\n              <IcoView>\n                {' '}\n                <FontAwesomeIcon icon={faSearch} color=\"green\" size=\"3x\" />\n              </IcoView>\n              <StatisticBlock>\n                <StatisticItem>\n                  <FontAwesomeIcon icon={faEye} color=\"green\" /> {views}\n                </StatisticItem>\n                <StatisticItem>\n                  <FontAwesomeIcon icon={faThumbsUp} color=\"green\" /> {likes}\n                </StatisticItem>\n                <StatisticItem>\n                  <FontAwesomeIcon icon={faSave} color=\"green\" /> {downloads}\n                </StatisticItem>\n              </StatisticBlock>\n            </Overlay>\n            <Image src={webformatURL} alt={tags} />\n          </ListItem>\n        ),\n      )}\n    </List>\n  );\n}\n\nImageListRender.propTypes = {\n  imagesArr: PropTypes.array.isRequired,\n  onGetLargeImg: PropTypes.func.isRequired,\n};\n","import axios from 'axios'\r\n\r\nconst BASE_URL = 'https://pixabay.com/api/'\r\nconst KEY = '18487031-50da0da9ba31764b7f32dc2fc'\r\n\r\nexport default function ServiceApi(query, page) {\r\n    return axios\r\n        .get(`${BASE_URL}?key=${KEY}&q=${query}&image_type=photo&page=${page}&orientation=horizontal&per_page=12`)\r\n        .then(response => response.data)\r\n\r\n}\r\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport styled from 'styled-components';\n\nconst SpinnerBlock = styled.div`\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n`;\nexport default function Spinner() {\n  return (\n    <SpinnerBlock>\n      <Loader type=\"Bars\" color=\"#00BFFF\" height={80} width={80} />\n    </SpinnerBlock>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Notification({ message }) {\n  return <div>{message}</div>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { info } from \"@pnotify/core\";\r\nimport \"@pnotify/core/dist/PNotify.css\";\r\nimport \"@pnotify/core/dist/BrightTheme.css\";\r\nimport \"@pnotify/confirm/dist/PNotifyConfirm.css\"\r\n\r\nexport default function ErrorInfo() {\r\n    return info({\r\n        title: \"The input is not correct\",\r\n        text: \"Please input another request!!\",\r\n        delay: 3000\r\n    })\r\n}","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport styled, { keyframes } from 'styled-components';\nimport { rollIn, rollOut } from 'react-animations';\nimport PropTypes from 'prop-types';\n\nconst animIn = keyframes`${rollIn}`;\nconst animOut = keyframes`${rollOut}`;\n\nconst Image = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: contain;\n`;\nconst Modal = styled.div`\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 40px;\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.7);\n`;\nconst ContentBlock = styled.div`\n  position: relative;\n  opacity: 0;\n  transition-property: opacity;\n  transition-delay: 0.3s;\n  &.open {\n    opacity: 1;\n    animation: 1s ${animIn};\n  }\n\n  &.close {\n    animation: 0.6s ${animOut};\n    opacity: 0;\n  }\n`;\nconst ButtonClose = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background-color: transparent;\n  border: 2px solid grey;\n  border-radius: 50%;\n  cursor: pointer;\n  opacity: 0;\n  transition-property: opacity;\n  transition-delay: 4s;\n  &.open {\n    opacity: 1;\n  }\n  &.close {\n    opacity: 0;\n  }\n`;\nexport default class ModalWindows extends Component {\n  static propTypes = {\n    imgUrl: PropTypes.string.isRequired,\n  };\n\n  state = {\n    isOut: null,\n    timeOut: null,\n  };\n\n  componentDidMount() {\n    document.body.style.overflow = 'hidden';\n    window.addEventListener('keydown', this.handlerEscape);\n  }\n\n  componentWillUnmount() {\n    document.body.style.overflow = 'visible';\n    window.removeEventListener('keydown', this.handlerEscape);\n    clearTimeout(this.state.timeOut);\n  }\n\n  handlerEscape = e => {\n    if (e.code === 'Escape') {\n      this.fadeoutModal();\n    }\n  };\n\n  fadeoutModal = () => {\n    this.setState({\n      isOut: true,\n    });\n    const timeId = setTimeout(() => this.props.onCloseModal(), 500);\n    this.setState({\n      timeOut: timeId,\n    });\n  };\n\n  onLoadImage = () => {\n    this.setState({\n      isOut: false,\n    });\n  };\n\n  render() {\n    const { imgUrl } = this.props;\n    const styledClose = 'close';\n    const styledOpen = 'open';\n\n    return (\n      <Modal>\n        <ContentBlock className={this.state.isOut ? styledClose : styledOpen}>\n          <ButtonClose\n            className={this.state.isOut ? styledClose : styledOpen}\n            type=\"button\"\n            onClick={() => {\n              this.fadeoutModal();\n            }}\n          >\n            <FontAwesomeIcon icon={faTimesCircle} color=\"green\" size=\"2x\" />\n          </ButtonClose>\n          <Image src={imgUrl} onLoad={this.onLoadImage} />\n        </ContentBlock>\n      </Modal>\n    );\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Button = styled.button`\n  display: block;\n  padding: 20px 10px;\n  max-width: 250px;\n  margin: 0 auto;\n  border: none;\n  border-radius: 0.5rem;\n  background-color: green;\n  color: #fff;\n  font-size: 0.8rem;\n  font-weight: 600;\n  cursor: pointer;\n`;\n\nexport default function ButtonLoadMore({ onLoad }) {\n  return (\n    <Button type=\"button\" onClick={() => onLoad()}>\n      LoadMore\n    </Button>\n  );\n}\n\nButtonLoadMore.propTypes = {\n  onLoad: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst CheckboxWrap = styled.label`\n  width: max-content;\n  display: block;\n  margin: 0 auto;\n`;\nconst Checkbox = styled.input`\n  width: 17px;\n  height: 17px;\n`;\nconst CheckboxTitle = styled.span`\n  font-size: 0.8rem;\n  font-weight: 600;\n  color: green;\n  margin-right: 5px;\n`;\n\nexport default class LoadInfinityControl extends Component {\n  static propTypes = {\n    onCheckChange: PropTypes.func.isRequired,\n  };\n\n  state = {\n    isInfinityLoad: false,\n  };\n\n  handleCheckbox = e => {\n    const { checked } = e.target;\n    this.setState({\n      isInfinityLoad: checked,\n    });\n    this.props.onCheckChange(checked);\n  };\n\n  render() {\n    const { isInfinityLoad } = this.state;\n    return (\n      <CheckboxWrap>\n        <CheckboxTitle>use infinity scroll:</CheckboxTitle>\n        <Checkbox\n          type=\"checkbox\"\n          checked={isInfinityLoad}\n          onChange={this.handleCheckbox}\n        />\n      </CheckboxWrap>\n    );\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleUp } from '@fortawesome/free-solid-svg-icons';\n\nconst ButtonScTop = styled.a`\n  display: block;\n  position: fixed;\n  right: 5px;\n  bottom: 10px;\n  background-color: transparent;\n  cursor: pointer;\n  &:hover .icon {\n    color: green;\n  }\n`;\n\nexport default function ButtonScrollTop() {\n  return (\n    <ButtonScTop href=\"#page-header\">\n      <FontAwesomeIcon\n        className=\"icon\"\n        icon={faChevronCircleUp}\n        color=\"grey\"\n        size=\"3x\"\n      />\n    </ButtonScTop>\n  );\n}\n","import React, { Component, Fragment } from 'react';\nimport PageHeader from './components/HeaderPage';\nimport FormSearch from './components/FormSearch';\nimport Section from './components/Section';\nimport ImageListRender from './components/ImagesListRender';\nimport ServiceApi from './service/ServiceApi';\nimport Spinner from './components/Spinner';\nimport Notification from './components/Notification';\nimport ErrorInfo from './service/ErrorInfo';\nimport Modal from './components/Modal';\nimport ButtonLoadMore from './components/ButtonLoadMore';\nimport LoadInfinityControl from './components/LoadInfinityControl';\nimport ButtonScrollTop from './components/ButtonScrollTop';\n\nexport default class App extends Component {\n  state = {\n    images: [],\n    formSearch: '',\n    page: 1,\n    loading: false,\n    error: null,\n    largeImgUrl: null,\n    isFullHits: false,\n    isInfinityScroll: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.formSearch !== this.state.formSearch) {\n      this.fethApi();\n    }\n    if (prevState.page !== this.state.page) {\n      if (!this.state.isInfinityScroll) {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      }\n    }\n  }\n\n  registrationIntersectionObserver = () => {\n    const onEntries = (entries, observer) => {\n      entries.forEach(entry => {\n        if (\n          entry.isIntersecting &&\n          this.state.formSearch !== '' &&\n          this.state.isInfinityScroll\n        ) {\n          console.log('object is intersecting');\n          this.fethApi();\n        }\n      });\n    };\n    const options = {\n      rootMargin: '200px',\n      threshold: 0.5,\n    };\n    const observerApi = new IntersectionObserver(onEntries, options);\n    const trackingObj = document.querySelector('#trackingObj');\n    observerApi.observe(trackingObj);\n  };\n\n  fethApi = () => {\n    const { formSearch, page } = this.state;\n    this.setState({\n      loading: true,\n    });\n    ServiceApi(formSearch, page)\n      .then(data => {\n        if (data.hits.length === 0) {\n          ErrorInfo();\n        }\n        if (this.state.images.length < data.total) {\n          this.setState(prevState => {\n            return {\n              images: [...prevState.images, ...data.hits],\n              page: prevState.page + 1,\n              isFullHits: false,\n            };\n          });\n        } else {\n          this.setState({\n            isFullHits: true,\n          });\n        }\n      })\n      .catch(error => {\n        this.setState({\n          error,\n        });\n      })\n      .finally(() => {\n        this.setState({\n          loading: false,\n        });\n      });\n  };\n\n  handlerFormSubmit = query => {\n    this.setState({\n      formSearch: query,\n      page: 1,\n      images: [],\n      isFullHits: false,\n    });\n  };\n\n  openModal = urlImgLarge => {\n    this.setState({\n      largeImgUrl: urlImgLarge,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      largeImgUrl: null,\n    });\n  };\n\n  handleCheckbox = checked => {\n    this.setState({\n      isInfinityScroll: checked,\n    });\n    this.registrationIntersectionObserver();\n  };\n\n  render() {\n    const {\n      images,\n      loading,\n      error,\n      largeImgUrl,\n      isFullHits,\n      isInfinityScroll,\n    } = this.state;\n    return (\n      <Fragment>\n        <PageHeader>\n          <FormSearch onSearch={this.handlerFormSubmit} />\n          <LoadInfinityControl onCheckChange={this.handleCheckbox} />\n        </PageHeader>\n        <main>\n          <Section>\n            {images.length > 0 && (\n              <ImageListRender\n                imagesArr={images}\n                onGetLargeImg={this.openModal}\n              />\n            )}\n            {loading && <Spinner />}\n            {error && (\n              <Notification message={`Error loading:${error.message}`} />\n            )}\n            {!loading &&\n              images.length > 0 &&\n              !isFullHits &&\n              !isInfinityScroll && <ButtonLoadMore onLoad={this.fethApi} />}\n            <div id=\"trackingObj\" />\n            {images.length > 0 && <ButtonScrollTop />}\n          </Section>\n        </main>\n        {largeImgUrl && (\n          <Modal\n            imgUrl={this.state.largeImgUrl}\n            onCloseModal={this.closeModal}\n          />\n        )}\n      </Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport '@csstools/normalize.css';\nimport './base.css';\nimport App from './App';\n\nReactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}